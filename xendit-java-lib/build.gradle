plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray'
    id "com.diffplug.gradle.spotless" version "3.27.1"
}

group 'com.xendit'
version '1.9.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.projectlombok:lombok:1.18.8'

    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.powermock:powermock-api-mockito2:2.0.2'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:2.0.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:2.0.2'
    testCompile 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation group: "org.mockito", name: "mockito-core", version:"3.1.0"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId this.group
            artifactId artifact

            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            pom {
                name = libraryName
                description = libraryDescription
                url = siteUrl
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
                scm {
                    connection = gitUrl
                    developerConnection = gitUrl
                    url = siteUrl
                }
            }
        }
    }
}

def bintrayUser = System.getenv('BINTRAY_USER')
def bintrayAPIKey = System.getenv('BINTRAY_API_KEY')
def bintrayGPGPassword = System.getenv('BINTRAY_GPG_PASSWORD')

bintray {
    user = bintrayUser
    key = bintrayAPIKey

    configurations = ['archives']
    publish = true

    pkg {
        repo = bintrayRepo
        name = bintrayName
        userOrg = "xendit"
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = bintrayGPGPassword
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}

apply plugin: 'java'
apply plugin: 'com.diffplug.gradle.spotless'

spotless {
    java {
        googleJavaFormat()
    }
}